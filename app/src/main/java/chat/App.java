/*
 * This source file was generated by the Gradle 'init' task
 */
package chat;

import chat.application.ChatUseCase;
import chat.domain.ChatModelPort;
import chat.infrastructure.adapter.OllamaChatAdapter;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class App {
    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }

    @Bean
    public ChatModelPort chatModelPort() {
        return new OllamaChatAdapter("http://localhost:11434");
    }

    @Bean
    public ChatUseCase chatUseCase(ChatModelPort port) {
        return new ChatUseCase(port);
    }
    @Bean
    public org.springframework.web.servlet.config.annotation.WebMvcConfigurer corsConfigurer() {
        return new org.springframework.web.servlet.config.annotation.WebMvcConfigurer() {
            @Override
            public void addCorsMappings(org.springframework.web.servlet.config.annotation.CorsRegistry registry) {
        registry.addMapping("/**")
            .allowedOrigins("http://localhost:3000", "http://localhost:3001")
            .allowedMethods("GET", "POST", "OPTIONS")
            // Explicitly allow Authorization and Content-Type so browser preflight passes
            .allowedHeaders("Authorization", "Content-Type", "X-Requested-With", "Accept")
            .exposedHeaders("Authorization")
            .allowCredentials(true)
            .maxAge(1800);
            }
        };
    }
}
